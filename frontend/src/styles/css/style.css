@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
  letter-spacing: 0.03em; /* Добавил межбуквенный интервал*/
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
/*       svg *[fill] { fill: currentColor }
      svg *[stroke] { stroke: currentColor }
 */
/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/* Обнуление <address>*/
address {
  font-style: normal;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

}
  */
:root {
  --color-main: rgba(33, 33, 33, 1);
  --color-light: rgba(252, 252, 252, 1);
  --color-button: #000000;
  --color-gold: #ebd3ab;
  --color-gray-back: rgba(82, 82, 82, 0.09);
  --color-gray-text: rgba(33, 33, 33, 0.4);
  --color-pagination-back: rgba(204, 204, 204, 1);
  --color-black: #000000;
  --border-radius: 8px;
  --border-radius-large: 16px;
  --shadow-default: 0px 4px 4px rgba(0, 0, 0, 0.25);
  --font-family-base: "PlusJakartaSans", sans-serif;
  --container-width: 1344px;
  --container-padding-x: 0px;
  --section-padding-top-y: 0px;
  --input-height: 36px;
  --button-height: 36px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.hide {
  max-height: 0;
  overflow: hidden;
  transition: 1s ease-out;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (max-width: 1023px) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

@media (min-width: 1024px) {
  .visible-tablet {
    display: none !important;
  }
}

@font-face {
  font-family: "PlusJakartaSans";
  src: url("../../assets/fonts/PlusJakartaSans-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PlusJakartaSans";
  src: url("../../assets/fonts/PlusJakartaSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PlusJakartaSans";
  src: url("../../assets/fonts/PlusJakartaSans-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PlusJakartaSans";
  src: url("../../assets/fonts/PlusJakartaSans-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/* @import 'blocks/field';
@import 'blocks/burger-button';
@import 'blocks/button';
@import 'blocks/grid';
@import 'blocks/header';
@import 'blocks//cross-button';

@import 'blocks/section'; */